# this section is needed to proxy web-socket connections
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {

        root /var/www/hexenhaus.online;
        index index.html index.htm index.nginx-debian.html;

        server_name hexenhaus.online www.hexenhaus.online;
        
        location /pwdchecker/ {
            
            proxy_pass http://127.0.0.1:3033;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # allow websockets
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP

            # this setting allows the browser to cache the application in a way compatible with Meteor
            # on every applicaiton update the name of CSS and JS file is different, so they can be cache infinitely (here: 30 days)
            # the root path (/) MUST NOT be cached
            if ($uri != '/') {
              expires 30d;
            }
            
        }

        location / {
        #proxy_pass http://127.0.0.1:3030;
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade; # allow websockets
        #proxy_set_header Connection $connection_upgrade;
        #proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP

        # this setting allows the browser to cache the application in a way compatible with Meteor
        # on every applicaiton update the name of CSS and JS file is different, so they can be cache infinitely (here: 30 days)
        # the root path (/) MUST NOT be cached
        if ($uri != '/') {
            expires 30d;
        }
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hexenhaus.online/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hexenhaus.online/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}server {
    if ($host = www.hexenhaus.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = hexenhaus.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;

        server_name hexenhaus.online www.hexenhaus.online;
    return 404; # managed by Certbot




}
